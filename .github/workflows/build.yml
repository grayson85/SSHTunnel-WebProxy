name: Build SSH Tunnel GUI App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]

    steps:
      # Step 1: Checkout code
      - uses: actions/checkout@v3

      # Step 2: Setup Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      # Step 3: Install Fyne tool
      - name: Install Fyne tool
        run: go install fyne.io/tools/cmd/fyne@latest

      # Step 4: Linux dependencies
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libgl1-mesa-dev libx11-dev libxi-dev \
            libxcursor-dev libxrandr-dev libxinerama-dev libxxf86vm-dev libvulkan-dev

      # Step 5: macOS dependencies
      - name: Install macOS dependencies
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install glfw

      # Step 6: Build binary (Linux)
      - name: Build binary (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          BIN_NAME="ssh-tunnel-gui-ubuntu-latest-${{ matrix.arch }}"
          go build -o $BIN_NAME main.go
        shell: bash

      # Step 7: Build binary (macOS)
      - name: Build binary (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          BIN_NAME="ssh-tunnel-gui-macos-latest-${{ matrix.arch }}"
          fyne package -os darwin -name "$BIN_NAME" -icon ssh.png
        shell: bash

      # Step 8: Build binary (Windows)
      - name: Build binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          BIN_NAME="ssh-tunnel-gui-windows-latest-${{ matrix.arch }}"
          # Fyne automatically appends .exe
          fyne package -os windows -name "$BIN_NAME" -icon ssh.png
        shell: bash

      # Step 9: Upload artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-binary
          path: |
            # Linux executable
            ssh-tunnel-gui-ubuntu-latest-${{ matrix.arch }}

            # macOS .app bundle
            ssh-tunnel-gui-macos-latest-${{ matrix.arch }}.app

            # Windows executable
            ssh-tunnel-gui-windows-latest-${{ matrix.arch }}.exe
