name: Build SSH Tunnel GUI App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Install Fyne tool
        run: go install fyne.io/fyne/v2/cmd/fyne@latest

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libgl1-mesa-dev libx11-dev libxi-dev \
            libxcursor-dev libxrandr-dev libxinerama-dev libxxf86vm-dev libvulkan-dev

      - name: Install macOS dependencies
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install glfw

      - name: Build binary (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          echo "Building for OS=${{ matrix.os }} ARCH=${{ matrix.arch }}"
          BIN_NAME="ssh-tunnel-gui-${{ matrix.os }}-${{ matrix.arch }}"
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            FYNE_OS=darwin
            FYNE_ARCH=${{ matrix.arch }}
            fyne package -os $FYNE_OS -arch $FYNE_ARCH -name "$BIN_NAME" -icon ssh.png
          else
            go build -o $BIN_NAME main.go
          fi
        shell: bash

      - name: Build binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          $env:BIN_NAME="ssh-tunnel-gui-windows-${{ matrix.arch }}"
          go build -o $env:BIN_NAME main.go
        shell: pwsh

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-binary
          path: ssh-tunnel-gui-${{ matrix.os }}-${{ matrix.arch }}*
